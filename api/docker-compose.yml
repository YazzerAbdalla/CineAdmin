services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cine-admin-api
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - NODE_ENV=production # Removed extra space
    ports:
      - '${PORT}:3000'
    depends_on:
      postgres:
        condition: service_healthy # Wait for postgres to be healthy
    networks:
      - cine-admin-network

  postgres:
    image: postgres:17-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_DB=mytest # Removed extra spaces
      - POSTGRES_USER=postgres # Removed extra spaces
      - POSTGRES_PASSWORD=mysecretpassword
      # Removed extra spaces
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - postgres_nodejs_data:/var/lib/postgresql/data
    networks:
      - cine-admin-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  cine-admin-network:
    driver: bridge

volumes:
  postgres_nodejs_data:
